Tip #1:
Create a 2-D char array with 3x3 dimensions
2. Get user input and fill the array (use nested for loops)
3. Print the table grid using the array (use nested for loops)
4. Now you are on the analyze step.
    If there are a lot more X's than O's or vice versa:
        Print "Impossible" (use nested for loops)
    Else:
        You have to consider both X and Y as three in rows, columns and diagonals.
        First, consider X in rows, columns and diagonals. (use boolean variable and for loops)
        Second, consider O in rows, columns and diagonals. (use boolean variable and for loops)
        Finally, using if-else if-..........-else, print conditions. (be very careful the condition order!)


Tip #2:
To get the desired "Correct" you need to use "if else" with boolean methods (they should return boolean type) for every game state (except the last one):
- check the "Impossible" game state. Subtraction of  'O' and 'X' occurrences must be equal to 0 or 1. Check the win state for X and O.
- check "O wins" game state. Here you can simply check every "wining" case for "O" player.
- check "X wins" game state. Here you can simply check every "wining" case for "X" player.
- check "Game not finished" game state.  The count of 'O' and 'X' must be less than 9.
- otherwise you get "Draw" game state.



Personal:
- if empty (_) --> then check if....

// save this: printGrid() method
//        String[] symbols = scn.nextLine().split("");
//
//        int grid = 3;
//        System.out.println("---------");
//        for (int i = 0; i < symbols.length; i++) {
//
//            // beginning of line
//            if (i % grid == 0) {
//                System.out.print("| ");
//            }
//            System.out.print(symbols[i] + " ");
//
//            // end of line
//            if (i % grid == 2) {
//                System.out.println("|");
//            }
//        }
//        System.out.println("---------");



else {
            if (xIsWinning) {
                System.out.println("X wins");
            }
            if (oIsWinning) {
                System.out.println("O wins");
            }
        }